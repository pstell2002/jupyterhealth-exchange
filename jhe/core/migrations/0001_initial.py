# Generated by Django 5.1 on 2024-11-15 17:20

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodeableConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coding_system', models.CharField()),
                ('coding_code', models.CharField()),
                ('text', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='JheUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('email_is_verified', models.BooleanField(default=False)),
                ('identifier', models.CharField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JheUserOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jhe_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('type', models.CharField(choices=[('root', 'ROOT'), ('prov', 'Healthcare Provider'), ('dept', 'Hospital Department'), ('team', 'Organizational team'), ('govt', 'Government'), ('ins', 'Insurance Company'), ('pay', 'Payer'), ('edu', 'Educational Institute'), ('reli', 'Religious Institution'), ('crs', 'Clinical Research Sponsor'), ('cg', 'Community Group'), ('bus', 'Non-Healthcare Business or Corporation'), ('other', 'Other'), ('laboratory', 'Laboratory'), ('imaging', 'Imaging Center'), ('pharmacy', 'Pharmacy'), ('health-information-network', 'Health Information Network'), ('health-data-aggregator', 'Health Data Aggregator')])),
                ('part_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.organization')),
                ('users', models.ManyToManyField(through='core.JheUserOrganization', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='jheuserorganization',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization'),
        ),
        migrations.AddField(
            model_name='jheuser',
            name='organizations',
            field=models.ManyToManyField(through='core.JheUserOrganization', to='core.organization'),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField()),
                ('name_family', models.CharField()),
                ('name_given', models.CharField()),
                ('birth_date', models.DateField()),
                ('telecom_cell', models.CharField(null=True)),
                ('jhe_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_attachment_data', models.JSONField()),
                ('transaction_time', models.DateTimeField()),
                ('client_id', models.CharField()),
                ('scope_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.codeableconcept')),
                ('subject_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('description', models.TextField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
            ],
        ),
        migrations.CreateModel(
            name='StudyPatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.study')),
            ],
        ),
        migrations.AddField(
            model_name='study',
            name='patients',
            field=models.ManyToManyField(through='core.StudyPatient', to='core.patient'),
        ),
        migrations.CreateModel(
            name='StudyPatientScopeConsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope_actions', models.CharField(default='rs', null=True)),
                ('consented', models.BooleanField()),
                ('time', models.DateTimeField()),
                ('scope_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.codeableconcept')),
                ('study_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.studypatient')),
            ],
        ),
        migrations.CreateModel(
            name='StudyScopeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope_actions', models.CharField(default='rs', null=True)),
                ('scope_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.codeableconcept')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.study')),
            ],
        ),
        migrations.AddConstraint(
            model_name='jheuserorganization',
            constraint=models.UniqueConstraint(fields=('jhe_user', 'organization_id'), name='core_jheuserorganization_unique_jhe_user_id_organization_id'),
        ),
        migrations.AddConstraint(
            model_name='observation',
            constraint=models.UniqueConstraint(fields=('subject_patient', 'client_id'), name='core_observation_unique_subject_patient_client_id'),
        ),
        migrations.AddConstraint(
            model_name='studypatient',
            constraint=models.UniqueConstraint(fields=('study_id', 'patient_id'), name='core_studypatient_unique_study_id_patient_id'),
        ),
        migrations.AddConstraint(
            model_name='studypatientscopeconsent',
            constraint=models.UniqueConstraint(fields=('study_patient', 'scope_code'), name='core_studypatientscopeconsent_unique_study_patient_id_scope_code_id'),
        ),
        migrations.AddConstraint(
            model_name='studyscoperequest',
            constraint=models.UniqueConstraint(fields=('study', 'scope_code'), name='core_studyscoperequest_unique_study_id_scope_code_id'),
        ),
        migrations.RenameField(
            model_name='observation',
            old_name='scope_code',
            new_name='code',
        ),
        migrations.AddConstraint(
            model_name='codeableconcept',
            constraint=models.UniqueConstraint(fields=('coding_system', 'coding_code'), name='core_codeableconcept_coding_system_coding_code'),
        ),
        migrations.RenameField(
            model_name='studypatientscopeconsent',
            old_name='time',
            new_name='consented_time',
        ),
        migrations.RemoveConstraint(
            model_name='observation',
            name='core_observation_unique_subject_patient_client_id',
        ),
        migrations.RenameField(
            model_name='observation',
            old_name='client_id',
            new_name='external_id',
        ),
        migrations.AddConstraint(
            model_name='observation',
            constraint=models.UniqueConstraint(fields=('subject_patient', 'external_id'), name='core_observation_unique_subject_patient_external_id'),
        ),
        migrations.RenameField(
            model_name='observation',
            old_name='code',
            new_name='codeable_concept',
        ),
        migrations.RenameField(
            model_name='observation',
            old_name='transaction_time',
            new_name='last_updated',
        ),
        migrations.RemoveConstraint(
            model_name='observation',
            name='core_observation_unique_subject_patient_external_id',
        ),
        migrations.RemoveField(
            model_name='observation',
            name='external_id',
        ),
        migrations.AddField(
            model_name='observation',
            name='status',
            field=models.CharField(choices=[('registered', 'registered'), ('preliminary', 'preliminary'), ('final', 'final'), ('amended', 'amended'), ('corrected', 'corrected'), ('appended', 'appended'), ('cancelled', 'cancelled'), ('entered-in-error', 'Entered in Error'), ('unknown', 'Unknown')], default='final'),
        ),
        migrations.CreateModel(
            name='ObservationIdentifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.CharField(null=True)),
                ('value', models.CharField(null=True)),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.observation')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('system', 'value'), name='core_observation_identifier_unique_observation_system_value')],
            },
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(null=True)),
                ('type', models.CharField(choices=[('personal_device', 'Personal Device')], default='personal_device')),
            ],
        ),
        migrations.CreateModel(
            name='DataSourceSupportedScope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.datasource')),
                ('scope_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.codeableconcept')),
            ],
        ),
        migrations.CreateModel(
            name='StudyDataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.datasource')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.study')),
            ],
        ),
        migrations.AddField(
            model_name='observation',
            name='data_source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.datasource'),
        ),
        migrations.RenameField(
            model_name='patient',
            old_name='telecom_cell',
            new_name='telecom_phone',
        ),
        migrations.AddField(
            model_name='patient',
            name='last_updated',
            field=models.DateTimeField(default='2024-09-23'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='observation',
            name='last_updated',
            field=models.DateTimeField(default=datetime.datetime.now),
        ),
        migrations.AddField(
            model_name='patient',
            name='organization',
            field=models.ForeignKey(default=20015, on_delete=django.db.models.deletion.CASCADE, to='core.organization'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='patient',
            name='identifier',
            field=models.CharField(null=True),
        ),
    ]
